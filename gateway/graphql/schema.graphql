type Product {
    id: ID!
    name: String!
    image: String!
    price: Float!
    quantity: Float!
}

type Store {
    id: ID!
    name: String!
    email: String
}

type LineItem {
    product: Product!,
    count: Int!
}

type Cart {
    items: [LineItem!]
    count: Int!
}

type Order {
    id: ID!
    store: Store!
    items: [LineItem!]!
    status: OrderStatus!
}

enum OrderStatus {
    PROCESSING
    PREPARING_TO_SHIP
    SHIPPED
    DELIVERED
    PREPARING_FOR_PICKUP
    READY_FOR_PICKUP
    PICKED_UP
}

type Query {
    products(search: String, offset: Int, limit: Int): [Product!]
    cart: Cart
    order(id: ID!): Order
}

type Mutation {
    addToCart(productId: ID!): Boolean
    orderCart(storeId: ID!): Order
}